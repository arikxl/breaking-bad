{"version":3,"sources":["components/Search.jsx","components/AppFooter.jsx","images/logo.png","components/AppHeader.jsx","images/spinner.gif","components/Loader.jsx","components/RandomQuote.jsx","components/RandomDeath.jsx","components/CharacterItem.jsx","components/CharactersList.jsx","App.js","index.js"],"names":["Search","getQuery","useState","searchWord","setSearchWord","className","type","placeholder","value","autoFocus","onChange","e","inputWord","target","AppFooter","href","rel","Date","getFullYear","AppHeader","src","logo","alt","Loader","loader","style","width","margin","display","RandomQuote","randomQuote","isLoading","quote","author","series","RandomDeath","randomDeath","img","death","cause","responsible","last_words","CharacterItem","item","name","nickname","occupation","status","category","portrayed","CharactersList","characters","map","char_id","App","setCharacters","setRandomDeath","setRandomQuote","setIsLoading","showRandomQuote","setShowRandomQuote","showRandomDeath","setShowRandomDeath","query","setQuery","useEffect","fetchItems","a","axios","result","randomQuoteResult","data","onClick","fetchDeath","randomDeathResult","fetchQuote","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f66e0f3.chunk.js","sourcesContent":["import React, {useState } from 'react'\r\n\r\nconst Search = ({getQuery}) => {\r\n\r\n    const [searchWord, setSearchWord] = useState('');\r\n\r\n    const onChange = (inputWord) => {\r\n        setSearchWord(inputWord);\r\n        getQuery(inputWord);\r\n    }\r\n\r\n    return (\r\n        <section className=\"search\">\r\n            <form >\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form\"\r\n                    placeholder=\"Search Characters\"\r\n                    value = {searchWord}\r\n                    autoFocus\r\n                    onChange={(e) => onChange(e.target.value)}\r\n                />\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react'\r\n\r\nconst AppFooter = () => {\r\n    return (\r\n        <div className=\"app-footer\">\r\n          <a href=\"https://www.linkedin.com/in/arik-alexandrov/\"\r\n           target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Â©arikxl {new Date().getFullYear()}\r\n          </a>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AppFooter\r\n","export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from 'react';\r\n\r\nimport logo from '../images/logo.png';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <img src={logo} alt=\"\" />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react';\r\n\r\nimport loader from '../images/spinner.gif'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <img src={loader} alt=\"Loading...\"\r\n            style={{ width: \"200px\", margin: \"auto\", display: \"block\" }} />\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Loader from './Loader';\r\n\r\nconst RandomQuote = ({ randomQuote, isLoading }) => {\r\n    return isLoading ? <Loader /> :\r\n        <div className=\"random-quote-container\">\r\n            <h1>\r\n                \"{randomQuote.quote}\"\r\n            </h1>\r\n            <h3>{randomQuote.author}</h3>\r\n            {(randomQuote.series) === \"Better Call Saul\" && (\r\n                <h3>From \"{randomQuote.series}\"</h3>\r\n            )}\r\n        </div>;\r\n};\r\n\r\nexport default RandomQuote;","import React from 'react';\r\nimport Loader from './Loader';\r\n\r\nconst RandomDeath = ({randomDeath, isLoading} ) => {\r\n    return isLoading ? <Loader /> :     \r\n    \r\n        <div className=\"randomDeath-container\">\r\n                <div className=\"randomDeath-img-container\">\r\n                    <img src={randomDeath.img} alt=\"\" />\r\n                </div>\r\n                <div className=\"randomDeath-info\">\r\n                    <h1>{randomDeath.death}</h1>\r\n                    <ul>\r\n                        <li>\r\n                            <strong>Cause of Death: </strong>\r\n                            {randomDeath.cause}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Responsible: </strong>\r\n                            {randomDeath.responsible}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Last Words: </strong>\r\n                            {randomDeath.last_words}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>     \r\n    \r\n};\r\n\r\nexport default RandomDeath;\r\n","import React from 'react'\r\n\r\nconst CharacterItem = ({item}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-inner\">\r\n                <div className=\"card-front\">\r\n                    <img src={item.img} alt=\"\" />\r\n                </div> \r\n                <div className=\"card-back\">\r\n                    <h1>{item.name}</h1>\r\n                    <ul>\r\n                  \r\n                        <li>\r\n                            <strong>Nickname: </strong>\r\n                            {item.nickname}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Occupation: </strong>\r\n                            {item.occupation[0]}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Status: </strong>\r\n                            {item.status}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Series: </strong>\r\n                            {item.category}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Actor Name: </strong>\r\n                            {item.portrayed}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CharacterItem;\r\n","import React from 'react'\r\nimport Loader from './Loader';\r\nimport CharacterItem from './CharacterItem';\r\n\r\nconst CharactersList = ({isLoading, characters}) => {\r\n    return isLoading ? <Loader /> : \r\n    <section className=\"cards\">\r\n        {characters.map(item =>  ( \r\n            <CharacterItem key={item.char_id} item={item}></CharacterItem>\r\n        ))}\r\n    </section>\r\n}\r\n\r\nexport default CharactersList;\r\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport './App.css';\nimport Search from './components/Search';\nimport AppFooter from './components/AppFooter';\nimport AppHeader from './components/AppHeader';\nimport RandomQuote from './components/RandomQuote';\nimport RandomDeath from './components/RandomDeath';\nimport CharactersList from './components/CharactersList';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [randomDeath, setRandomDeath] = useState({});\n  const [randomQuote, setRandomQuote] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [showRandomQuote, setShowRandomQuote] = useState(false)\n  const [showRandomDeath, setShowRandomDeath] = useState(false)\n  const [query, setQuery] = useState('');\n  \n  useEffect(() => { \n    const fetchItems = async () => { \n      const result = await axios(`https://www.breakingbadapi.com/api/characters?name=${query}`);\n      const randomQuoteResult = await axios(`https://www.breakingbadapi.com/api/quote/random`);\n      setCharacters( result.data);\n      setRandomQuote( randomQuoteResult.data)\n      setIsLoading(false);\n    }\n    fetchItems()\n  },[query])\n\n  const handleDeathClick = () => {\n    const fetchDeath = async () => {\n      const randomDeathResult = await axios(`https://www.breakingbadapi.com/api/random-death`);\n      setRandomDeath( randomDeathResult.data);\n      setShowRandomDeath(!showRandomDeath);\n    };\n    fetchDeath();\n  };\n\n  const handleQuoteClick = () => {\n    const fetchQuote = async () => {\n      const randomQuoteResult = await axios(`https://www.breakingbadapi.com/api/quote/random`);\n      setRandomQuote( randomQuoteResult.data);\n      setShowRandomQuote(!showRandomQuote);\n    };\n    fetchQuote();\n  };\n  \n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <div className=\"btns-container\">\n        <button className= \"death-btn btn\" onClick={handleDeathClick}\n        >Random Death</button>\n        <button className= \"quote-btn btn\" onClick={handleQuoteClick}\n        >Random Quote</button>\n      </div>\n      {showRandomQuote && <RandomQuote randomQuote={randomQuote[0]} isLoading={isLoading}/>}\n      {showRandomDeath && <RandomDeath randomDeath={randomDeath} isLoading={isLoading}/>}\n      <Search getQuery={(inputWord) => setQuery(inputWord)} />\n      <CharactersList isLoading={isLoading} characters={characters}/>\n      <AppFooter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}